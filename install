#!/bin/bash

outf=/tmp/cconv
conkydir=$HOME/.conky/crypto
conkystart=$HOME/.conky/conky-startup.sh
conkyautostart=$HOME/.config/autostart/conky.desktop
xgap=60

mkdir -p conkydir
rm -fr $conkydir/*

# if conkystart exists, keep whatever it has and add lines before exit
if [[ -f $conkystart ]]; then
	sed -i.bak '/exit 0/d' $conkystart
	sed -i.bak '/\.conky\/crypto/d' $conkystart
else
	# create conkystart
	echo '#!/bin/sh' >> $conkystart
	echo 'sleep 30' >> $conkystart
	chmod +x $conkystart

	#add it to autostart
	echo '[Desktop Entry]' >> $conkyautostart
	echo 'Type=Application' >> $conkyautostart
	echo 'Exec=sh "$HOME/.conky/conky-startup.sh"' >> $conkyautostart
	echo 'Hidden=false' >> $conkyautostart
	echo 'NoDisplay=false' >> $conkyautostart
	echo 'X-GNOME-Autostart-enabled=true' >> $conkyautostart
	echo 'Name[en_US]=Conky' >> $conkyautostart
	echo 'Name=Conky' >> $conkyautostart
fi

for currency in $(cat crypto.conf)
do
	# fill the template
	cp template conkyrc
	echo "gap_x $xgap" >> conkyrc
	echo "TEXT" >> conkyrc
	echo '${execi 300 curl -s "https://api.coinmarketcap.com/v1/ticker/'$currency'/?convert=EUR" -o "'$outf$currency'"}' >> conkyrc
	echo '${font Luxi Sans:size=12:bold}${color1}${alignc}'$currency' (${execi 300 jq -r ".[0].symbol" '$outf$currency'}) ${color5} \#${execi 300 jq -r ".[0].rank" '$outf$currency'} ${voffset 10}' >> conkyrc
	echo '${font Luxi Sans:size=12:bold}${color1}USD: ${color2}${execi 300 jq -r ".[0].price_usd" '$outf$currency' | xargs printf '%.*f' 4 }' >> conkyrc 
	echo '${color1}EUR: ${color5}${execi 300 jq -r ".[0].price_eur" '$outf$currency' | xargs printf '%.*f' 4}' >> conkyrc
	echo '${color1}BTC: ${color2}${execi 300 jq -r ".[0].price_btc" '$outf$currency' | xargs printf '%.*f' 6}' >> conkyrc
	echo '${font Luxi Sans:size=10:bold}${color2}Change 1H: $alignr ${color4}${if_match ${execi 300 jq -r ".[0].percent_change_1h" '$outf$currency'}<0}${color3}${endif}${execi 300 jq -r ".[0].percent_change_1h" '$outf$currency'}' >> conkyrc
	echo '${color2}Change 1D: $alignr ${color4}${if_match ${execi 300 jq -r ".[0].percent_change_24h" '$outf$currency'}<0}${color3}${endif}${execi 300 jq -r ".[0].percent_change_24h" '$outf$currency'}' >> conkyrc
	echo '${color2}Change 7D: $alignr ${color4}${if_match ${execi 300 jq -r ".[0].percent_change_7d" '$outf$currency'}<0}${color3}${endif}${execi 300 jq -r ".[0].percent_change_7d" '$outf$currency'}' >> conkyrc
	echo '${color2}Volume (Mil EUR)/24H: $alignr ${color1}${execi 300 LC_NUMERIC=en_US echo "scale =0; $(jq -r ".[0].\"24h_volume_eur\"" '$outf$currency' )/ 1000000" | bc -l |xargs numfmt --grouping}' >> conkyrc
	echo '${color2}Volume (Mil USD)/24H: $alignr ${color1}${execi 300 LC_NUMERIC=en_US echo "scale =0; $(jq -r ".[0].\"24h_volume_usd\"" '$outf$currency' )/ 1000000" | bc -l |xargs numfmt --grouping}' >> conkyrc
	echo '${font Luxi Sans:size=7}${color2} $alignr ${execi 300 date -d @$(jq -r ".[0].last_updated" '$outf$currency') +%H:%m:%S}' >> conkyrc

	# move the config to the right place
	mv conkyrc "$conkydir/$currency.rc"
	echo "conky -q -c $conkydir/$currency.rc &" >> $conkystart
	let xgap=xgap+300
done

echo 'exit 0' >> $conkystart

#restart conky
pkill -9 conky
$conkystart